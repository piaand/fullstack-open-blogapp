{"version":3,"sources":["services/blogs.js","services/login.js","reducers/userReducer.js","components/Header.js","hooks/index.js","reducers/notificationReducer.js","components/LoginForm.js","components/Notification.js","reducers/blogReducer.js","services/users.js","reducers/listersReducer.js","components/Blogview.js","components/UserCollection.js","components/Userview.js","components/Togglable.js","components/BlogList.js","components/BlogForm.js","components/BlogCollection.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","console","log","data","create","newBlog","config","headers","Authorization","post","getBlog","id","blogUrl","update","updateUrl","put","addComment","content","url","setToken","newToken","removeBlog","delete","login","credentials","loginUser","loginObject","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","blogService","type","Promise","reject","userReducer","state","action","LoggedUser","handleLogout","className","name","Button","onClick","color","NavigationBar","to","Header","useSelector","useDispatch","history","useHistory","AppBar","position","Toolbar","removeItem","push","useField","useState","value","setValue","onChange","event","target","reset","timedOutId","setNotification","notification","clearTimeout","setTimeout","notificationReducer","CreateLoginForm","tryLogin","usernameReset","username","passwordReset","password","onSubmit","preventDefault","LoginForm","handleLogin","Notification","message","lenght","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","createBlogWithUserDetails","blog","userDetails","addBlog","blogObject","addedBlog","deleteBlog","blogReducer","concat","map","filter","getUsers","users","initListers","userService","listers","listersReducer","useStyles","makeStyles","mainBlogInfo","borderBottom","CommentCollection","postComment","commentReset","comment","comments","BlogItem","likeBlog","classes","Card","CardHeader","title","CardContent","author","CardActions","likes","Blogview","deleteBlogById","confirm","commentIds","addedLike","likedBlog","updatedBlog","blogWithUserDetails","addLikeToBlog","addedComment","commentedBlog","addCommentToBlog","UserRow","lister","blogs","address","TableRow","TableCell","length","UserCollection","TableContainer","Table","TableHead","TableBody","Userview","Togglable","React","forwardRef","props","ref","visibility","setVisibility","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","root","minWidth","header","BlogLink","size","BlogList","sort","b","CreateBlogForm","addNewBlog","titleReset","authorReset","urlReset","BlogForm","blogFormRef","current","BlogCollection","useRef","App","matchByUserId","useRouteMatch","matchByBlogId","userMatch","find","params","blogMatch","useEffect","blogsData","loggedUserJSON","getItem","parse","retrieveUser","Container","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faaf39e7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n\tconst response = await axios.get(baseUrl)\n\tconsole.log('Getting all blogs: ', response.data)\n\treturn response.data\n}\n\nconst create = async ( newBlog ) => {\n\tconst config = {\n\t\theaders : { Authorization: token }\n\t}\n\n\tconst response = await axios.post(baseUrl, newBlog, config)\n\treturn response.data\n}\n\nconst getBlog = async ( id ) => {\n\tconst blogUrl = baseUrl + '/' + id\n\tconst response = await axios.get(blogUrl)\n\tconsole.log('Getting a blog: ', response.data)\n\treturn response.data\n}\n\nconst update = async ( id, newBlog ) => {\n\tconst updateUrl = baseUrl + '/' + id\n\tconst response = await axios.put(updateUrl, newBlog)\n\treturn response.data\n}\n\nconst addComment = async (id, content) => {\n\tconst url = baseUrl + '/' + id + '/comments'\n\tconst response = await axios.post(url, content)\n\treturn response.data\n}\n\nconst removeBlog = async ( id ) => {\n\tconst config = {\n\t\theaders : { Authorization: token }\n\t}\n\n\tconst blogUrl = baseUrl + '/' + id\n\tconst response = await axios.delete(blogUrl, config)\n\treturn response.data\n}\n\nexport default {\n\tgetAll,\n\tsetToken,\n\tcreate,\n\tgetBlog,\n\tupdate,\n\tremoveBlog,\n\taddComment\n}","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n\tconst response = await axios.post(baseUrl, credentials)\n\treturn response.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\nimport loginService from '../services/login'\n\nexport const loginUser = (loginObject) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst user = await loginService.login(loginObject)\n\t\t\twindow.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n\t\t\tblogService.setToken(user.token)\n\t\t\tdispatch({\n\t\t\t\ttype: 'LOGIN',\n\t\t\t\tdata: user\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\treturn Promise.reject('Invalid login')\n\t\t}\n\t}\n}\nexport const retrieveUser = (loggedUserJSON) => {\n\treturn async dispatch => {\n\t\tconst user = JSON.parse(loggedUserJSON)\n\t\tblogService.setToken(user.token)\n\t\tdispatch({\n\t\t\ttype: 'RETRIEVE',\n\t\t\tdata: user\n\t\t})\n\t\tconsole.log(`Uploaded user from local storage: ${user.name}`)\n\t}\n}\n\nexport const logoutUser = () => {\n\treturn async dispatch => {\n\t\twindow.localStorage.removeItem('loggedBlogAppUser')\n\t\tblogService.setToken(null)\n\t\tdispatch({\n\t\t\ttype: 'LOGOUT',\n\t\t})\n\t}\n}\n\nconst userReducer = (state = null, action) => {\n\tswitch(action.type) {\n\tcase 'LOGIN':\n\t\treturn action.data\n\tcase 'RETRIEVE':\n\t\treturn action.data\n\tcase 'LOGOUT':\n\t\treturn null\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default userReducer","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logoutUser } from '../reducers/userReducer'\nimport {\n\tAppBar,\n\tToolbar,\n\tButton\n} from '@material-ui/core'\n\nconst LoggedUser = ({ user, handleLogout }) => {\n\treturn (\n\t\t<div className='loggedUser'>\n\t\t\tLogged in as {user.name}&nbsp;\n\t\t\t<Button onClick={handleLogout} color='inherit'>\n\t\t\t\tLog out\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n\nconst NavigationBar = () => (\n\t<div>\n\t\t<Button color='inherit'>\n\t\t\t<Link to='/users'>users</Link>\n\t\t</Button>\n\t\t<Button color='inherit'>\n\t\t\t<Link to='/blogs'>blogs</Link>\n\t\t</Button>\n\t</div>\n)\n\nconst Header = () => {\n\tconst user = useSelector(state => state.user)\n\tconst dispatch = useDispatch()\n\tconst history = useHistory()\n\tconst handleLogout = () => {\n\t\tdispatch(logoutUser())\n\t\thistory.push('/login')\n\t}\n\n\treturn (\n\t\t<AppBar position=\"static\">\n\t\t\t<Toolbar>\n\t\t\t\t<NavigationBar />\n\t\t\t\t{ user !== null && <LoggedUser user={user} handleLogout={handleLogout}/>}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nexport default Header","import { useState } from 'react'\n\nexport const useField = (type, name) => {\n\tconst [value, setValue] = useState('')\n\n\tconst onChange = (event) => {\n\t\tsetValue(event.target.value)\n\t}\n\n\tconst reset = () => {\n\t\tsetValue('')\n\t}\n\n\treturn {\n\t\tvalue,\n\t\ttype,\n\t\tname,\n\t\tonChange,\n\t\treset\n\t}\n}","const notificationStart = null\nlet timedOutId = null\n\nexport const setNotification = (notification) => {\n\treturn async dispatch => {\n\t\tif(timedOutId) {\n\t\t\tclearTimeout(timedOutId)\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tdata: {\n\t\t\t\tnotification: notification\n\t\t\t}\n\t\t})\n\t\ttimedOutId = setTimeout(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'CHANGE',\n\t\t\t\tdata: {\n\t\t\t\t\tnotification: null\n\t\t\t\t}\n\t\t\t})\n\t\t}, 5000)\n\t}\n}\n\nconst notificationReducer = (state = notificationStart, action) => {\n\tswitch(action.type) {\n\tcase 'CHANGE':\n\t\treturn action.data.notification\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default notificationReducer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useField } from '../hooks/index'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\n\nconst CreateLoginForm = ({ tryLogin }) => {\n\tconst { reset: usernameReset, ...username } = useField('text', 'username')\n\tconst { reset: passwordReset, ...password } = useField('text', 'password')\n\n\tconst handleLogin = (event) => {\n\t\tevent.preventDefault()\n\t\ttryLogin({ username: username.value, password: password.value })\n\t\tusernameReset()\n\t\tpasswordReset()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Login to view your blogs!</h3>\n\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t<div>\n\t\t\t\t\tusername: <input {...username} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tpassword: <input {...password} />\n\t\t\t\t</div>\n\t\t\t\t<button id=\"loginButton\" type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch()\n\tconst handleLogin = async (loginObject) => {\n\t\ttry{\n\t\t\tawait dispatch(loginUser(loginObject))\n\t\t} catch (exception) {\n\t\t\tconsole.log(exception)\n\t\t\tdispatch(setNotification('Wrong username or password'))\n\t\t}\n\t}\n\treturn(<CreateLoginForm tryLogin={handleLogin}/>)\n}\n\nCreateLoginForm.propTypes = {\n\ttryLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n\tconst message = useSelector(state => state.notification)\n\tconst notificationStyle = {\n\t\tcolor: 'green',\n\t\tbackground: 'lightgrey',\n\t\tfontSize: 20,\n\t\tborderStyle: 'solid',\n\t\tborderRadius: 5,\n\t\tpadding: 10,\n\t\tmarginBottom: 10\n\t}\n\n\tif (message === null || message.lenght < 1) {\n\t\treturn null\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"notification\" style={notificationStyle}>\n\t\t\t\t{message}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Notification","import blogService from '../services/blogs'\n\nconst createBlogWithUserDetails = ( id, blog, user ) => {\n\tconst userDetails = {\n\t\tid: id,\n\t\tusername: user.username,\n\t\tname: user.name\n\t}\n\treturn { ...blog, user: userDetails }\n}\n\nexport const addLikeToBlog = ( id, user ) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst response = await blogService.getBlog(id)\n\t\t\t//get is populated with comment data, response needs only ids\n\t\t\tconst comments = response.comments\n\t\t\tconst commentIds = comments.map(comment => comment.id)\n\t\t\tconst addedLike = response.likes + 1\n\t\t\tconst likedBlog = { ...response, likes: addedLike, comments: commentIds }\n\n\t\t\tconst updatedBlog = await blogService.update(id, likedBlog)\n\t\t\tconst blogWithUserDetails = createBlogWithUserDetails(id, { ...updatedBlog, comments: comments }, user)\n\t\t\tdispatch({\n\t\t\t\ttype: 'LIKE_BLOG',\n\t\t\t\tdata: blogWithUserDetails\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log('Met exception')\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n}\n\nexport const addCommentToBlog = ( blog, comment ) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst response = await blogService.addComment(blog.id, { content: comment })\n\t\t\tconst addedComment = blog.comments.concat({ content: response.content, id: response.id })\n\t\t\tconst commentedBlog = { ...blog, comments: addedComment }\n\t\t\tdispatch({\n\t\t\t\ttype: 'COMMENT_BLOG',\n\t\t\t\tdata: commentedBlog\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log('Met exception')\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n}\n\nexport const initBlogs = () => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst blogsData = await blogService.getAll()\n\t\t\tdispatch({\n\t\t\t\ttype: 'INIT_BLOG',\n\t\t\t\tdata: blogsData\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n}\n\nexport const addBlog = (blogObject, user) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst response = await blogService.create(blogObject)\n\t\t\tconst addedBlog = createBlogWithUserDetails(response.user, response, user)\n\t\t\tdispatch({\n\t\t\t\ttype: 'ADD_BLOG',\n\t\t\t\tdata: addedBlog\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n\n}\n\nexport const deleteBlog = (id) => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tawait blogService.removeBlog(id)\n\t\t\tdispatch({\n\t\t\t\ttype: 'DELETE_BLOG',\n\t\t\t\tdata: id\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log('Met exception')\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n}\n\nconst blogReducer = (state = [], action) => {\n\tswitch(action.type) {\n\tcase 'INIT_BLOG':\n\t\treturn action.data\n\tcase 'ADD_BLOG':\n\t\treturn state.concat(action.data)\n\tcase 'LIKE_BLOG':\n\t\treturn state.map(blog => blog.id !== action.data.id ? blog : action.data)\n\tcase 'COMMENT_BLOG':\n\t\treturn state.map(blog => blog.id !== action.data.id ? blog : action.data)\n\tcase 'DELETE_BLOG':\n\t\treturn state.filter(blog => blog.id !== action.data )\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default blogReducer","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getUsers = async () => {\n\ttry {\n\t\tconst users = await axios.get(baseUrl)\n\t\treturn users.data\n\t} catch (exception) {\n\t\tconsole.log('Error getting users: ')\n\t\tconsole.log(exception)\n\t}\n}\n\nexport default {\n\tgetUsers\n}","import userService from '../services/users'\n\nexport const initListers = () => {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tconst listers = await userService.getUsers()\n\t\t\tdispatch({\n\t\t\t\ttype: 'INIT_LISTERS',\n\t\t\t\tdata: listers\n\t\t\t})\n\t\t} catch (exception) {\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n}\n\nconst listersReducer = (state = [], action) => {\n\tswitch(action.type) {\n\tcase 'INIT_LISTERS':\n\t\treturn action.data\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default listersReducer","import React from 'react'\nimport { addCommentToBlog, addLikeToBlog, deleteBlog } from '../reducers/blogReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { initListers } from '../reducers/listersReducer'\nimport { useHistory } from 'react-router'\nimport { useField } from '../hooks/index'\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCardActions,\n\tButton,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n\tmainBlogInfo: {\n\t\tborderBottom: 'solid #ecf2f9 2px'\n\t}\n})\n\nconst CommentCollection = ({ blog, postComment }) => {\n\tconst { reset: commentReset, ...comment } = useField('text', 'comment')\n\n\tconst createNewComment = (event) => {\n\t\tevent.preventDefault()\n\t\tpostComment(comment.value)\n\t\tcommentReset()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>Write a new comment</h4>\n\t\t\t<form onSubmit={createNewComment}>\n\t\t\t\t<div>\n\t\t\t\t\tComment:&nbsp; <input {...comment} />\n\t\t\t\t</div>\n\t\t\t\t<button id=\"addCommentButton\" type=\"submit\">Post!</button>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t<h3>Comments:</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{blog.comments && blog.comments.map(comment =>\n\t\t\t\t\t\t<li key={comment.id}>{comment.content}</li>)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const BlogItem = ({ blog, likeBlog, deleteBlog }) => {\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader className={classes.mainBlogInfo} title={blog.title}>\n\t\t\t</CardHeader>\n\t\t\t<CardContent className='extendedBlogInfo'>\n\t\t\t\t<p>by {blog.author}</p>\n\t\t\t\t<p>{blog.url}</p>\n\t\t\t\t<p>Added by: {blog.user && blog.user.name}</p>\n\t\t\t\t<CardActions><i className=\"fas fa-heart\"></i><span id='likeAmount'>{blog.likes}</span>&nbsp;\n\t\t\t\t\t<Button onClick={likeBlog}>like</Button>\n\t\t\t\t\t<Button onClick={deleteBlog}>remove blog</Button>\n\t\t\t\t</CardActions>\n\t\t\t</CardContent>\n\t\t</Card>)\n}\n\nconst Blogview = ({ blog }) => {\n\tconst user = useSelector(state => state.user)\n\tconst dispatch = useDispatch()\n\tconst history = useHistory()\n\n\tconst likeBlog = () => {\n\t\tdispatch(addLikeToBlog(blog.id, user))\n\t}\n\n\tconst deleteBlogById = async () => {\n\t\tconst result = window.confirm(`Are you sure you want to remove ${blog.title} from your list?`)\n\t\tif (result) {\n\t\t\tawait dispatch(deleteBlog(blog.id))\n\t\t\tdispatch(initListers())\n\t\t\thistory.push('/blogs')\n\t\t}\n\t}\n\n\tconst createNewComment = (comment) => {\n\t\tdispatch(addCommentToBlog(blog, comment))\n\t}\n\n\tif(!blog) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<BlogItem\n\t\t\t\tblog={blog}\n\t\t\t\tlikeBlog={likeBlog}\n\t\t\t\tdeleteBlog={deleteBlogById}\n\t\t\t/>\n\t\t\t<CommentCollection\n\t\t\t\tblog={blog} postComment={createNewComment}/>\n\t\t</div>\n\t)\n}\n\nexport default Blogview","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n\tTableContainer,\n\tTable,\n\tTableHead,\n\tTableRow,\n\tTableCell,\n\tTableBody\n} from '@material-ui/core'\n\nconst UserRow = ({ lister, blogs, address }) => (\n\t<TableRow>\n\t\t<TableCell>\n\t\t\t<Link to={address}>{lister.name}</Link></TableCell>\n\t\t<TableCell>{blogs && blogs.length}</TableCell>\n\t</TableRow>\n)\n\nconst UserCollection = () => {\n\tconst listers = useSelector(state => state.listers)\n\tconst baseAddress = '/users/'\n\tif(!listers) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<TableContainer>\n\t\t\t<h2>Users</h2>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell></TableCell>\n\t\t\t\t\t\t<TableCell>Blogs created</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{listers.map(lister =>\n\t\t\t\t\t\t<UserRow\n\t\t\t\t\t\t\tkey={lister.id}\n\t\t\t\t\t\t\tlister={lister}\n\t\t\t\t\t\t\tblogs={lister.blogs}\n\t\t\t\t\t\t\taddress={baseAddress + lister.id}/>)}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>)\n}\n\nexport default UserCollection","import React from 'react'\n\nconst Userview = ({ user }) => {\n\tif(!user) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h2>{user.name}</h2>\n\t\t\t<h3>Added blogs</h3>\n\t\t\t<ul>\n\t\t\t\t{user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Userview","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef(( props, ref ) => {\n\tconst [visibility, setVisibility] = useState(false)\n\n\tconst hideWhenVisible = { display: visibility ? 'none' : '' }\n\tconst showWhenVisible = { display: visibility ? '' : 'none' }\n\n\tconst toggleVisibility = () => {\n\t\tsetVisibility(!visibility)\n\t}\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\ttoggleVisibility\n\t\t}\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={hideWhenVisible}>\n\t\t\t\t<button onClick={toggleVisibility}>{props.buttonLabel}</button>\n\t\t\t</div>\n\t\t\t<div style={showWhenVisible}>\n\t\t\t\t{props.children}\n\t\t\t\t<button onClick = {toggleVisibility}>cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nTogglable.propTypes = {\n\tbuttonLabel: PropTypes.string.isRequired\n}\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCardActions,\n\tButton,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 275,\n\t\tmarginBottom: 12,\n\t},\n\theader: {\n\t\tborderBottom: 'solid #ecf2f9 2px'\n\t}\n})\n\nconst BlogLink = ( { blog, address } ) => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<CardHeader className={classes.header} title={blog.title} />\n\t\t\t<CardContent>\n\t\t\t\t<span className='blogLink'>by {blog.author}</span>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Link to={address}>\n\t\t\t\t\t\t<Button size=\"small\">See full view</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</CardActions>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n}\n\nconst BlogList = () => {\n\tconst user = useSelector(state => state.user)\n\tconst blogs = useSelector(state => state.blog\n\t\t.filter(blog => blog.user && blog.user.username === user.username)\n\t\t.sort((a,b) => b.likes - a.likes ))\n\tconst baseAddress = '/blogs/'\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Here are your blogs: </h3>\n\t\t\t{blogs.map(blog => <BlogLink\n\t\t\t\tkey={blog.id}\n\t\t\t\tblog={blog}\n\t\t\t\taddress={baseAddress + blog.id}/>)}\n\t\t</div>\n\t)\n}\nexport default BlogList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useField } from '../hooks/index'\nimport { initListers } from '../reducers/listersReducer'\n\nexport const CreateBlogForm = ({ addNewBlog }) => {\n\tconst { reset: titleReset, ...title } = useField('text', 'title')\n\tconst { reset: authorReset, ...author } = useField('text', 'author')\n\tconst { reset: urlReset, ...url } = useField('text', 'url')\n\n\tconst createNewBlog = (event) => {\n\t\tevent.preventDefault()\n\t\taddNewBlog({\n\t\t\ttitle: title.value,\n\t\t\tauthor: author.value,\n\t\t\turl: url.value\n\t\t})\n\t\ttitleReset()\n\t\tauthorReset()\n\t\turlReset()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Create new blog</h3>\n\t\t\t<form onSubmit={createNewBlog}>\n\t\t\t\t<div>\n\t\t\t\t\ttitle:&nbsp; <input {...title} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tauthor:&nbsp; <input {...author} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\turl:&nbsp; <input {...url} />\n\t\t\t\t</div>\n\t\t\t\t<button id=\"addBlogButton\" type=\"submit\">Create</button>\n\t\t\t</form>\n\t\t</div>)\n}\n\nconst BlogForm = ({ blogFormRef }) => {\n\tconst dispatch = useDispatch()\n\tconst user = useSelector(state => state.user)\n\n\tconst addNewBlog = async (blogObject) => {\n\t\tblogFormRef.current.toggleVisibility()\n\t\tawait dispatch(addBlog(blogObject, user))\n\t\tdispatch(initListers())\n\t\tdispatch(setNotification(`Blog titled '${blogObject.title}' is now added to the list.`))\n\t}\n\n\treturn (<CreateBlogForm addNewBlog={addNewBlog} />)\n}\n\nBlogForm.propTypes = {\n\tblogFormRef: PropTypes.object.isRequired\n}\n\nexport default BlogForm","import React, { useRef } from 'react'\nimport Togglable from './Togglable'\nimport BlogList from './BlogList'\nimport BlogForm from './BlogForm'\n\nconst BlogCollection = () => {\n\tconst blogFormRef = useRef()\n\treturn (\n\t\t<div>\n\t\t\t<Togglable buttonLabel={'new blog'} ref={blogFormRef}>\n\t\t\t\t<BlogForm blogFormRef={blogFormRef} />\n\t\t\t</Togglable>\n\t\t\t<BlogList />\n\t\t</div>\n\t)\n}\n\nexport default BlogCollection","import './App.css'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Header from './components/Header'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport Blogview from './components/Blogview'\nimport { initBlogs } from './reducers/blogReducer'\nimport { initListers } from './reducers/listersReducer'\nimport { retrieveUser } from './reducers/userReducer'\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router-dom'\nimport UserCollection from './components/UserCollection'\nimport Userview from './components/Userview'\nimport BlogCollection from './components/BlogCollection'\nimport Container from '@material-ui/core/Container'\n\nconst App = () => {\n\tconst dispatch = useDispatch()\n\tconst user = useSelector(state => state.user)\n\tconst listers = useSelector(state => state.listers)\n\tconst blogs = useSelector(state => state.blog)\n\n\tconst matchByUserId = useRouteMatch('/users/:id')\n\tconst matchByBlogId = useRouteMatch('/blogs/:id')\n\tconst userMatch = matchByUserId\n\t\t? listers.find(lister => lister.id === matchByUserId.params.id)\n\t\t: null\n\tconst blogMatch = matchByBlogId\n\t\t? blogs.find(blog => blog.id === matchByBlogId.params.id)\n\t\t: null\n\n\tuseEffect(() => {\n\t\tdispatch(initBlogs())\n\t}, [])\n\n\tuseEffect(() => {\n\t\tdispatch(initListers())\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n\t\tif(loggedUserJSON) {\n\t\t\tdispatch(retrieveUser(loggedUserJSON))\n\t\t}\n\t}, [])\n\treturn (\n\t\t<Container>\n\t\t\t<Header />\n\t\t\t<h1>Bloglists!</h1>\n\t\t\t<Notification />\n\t\t\t<Switch>\n\t\t\t\t<Route path='/users/:id'>\n\t\t\t\t\t<Userview user={userMatch}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/blogs/:id'>\n\t\t\t\t\t<Blogview blog={blogMatch}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/users'>\n\t\t\t\t\t{user ? <UserCollection /> : <Redirect to='/login' />}\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/blogs'>\n\t\t\t\t\t{user ? <BlogCollection /> : <Redirect to='/login' />}\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/login'>\n\t\t\t\t\t{user ? <Redirect to='/users' />: <LoginForm />}\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/'>\n\t\t\t\t\t{user ? <Redirect to='/users' /> : <Redirect to='/login' />}\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Container>\n\t)\n}\n\nexport default App\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\nimport listersReducer from './reducers/listersReducer'\n\nconst reducer = combineReducers({\n\tnotification: notificationReducer,\n\tblog: blogReducer,\n\tuser: userReducer,\n\tlisters: listersReducer,\n})\n\nconst store = createStore(\n\treducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(thunk)\n\t)\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport './index.css'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}